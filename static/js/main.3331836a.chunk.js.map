{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","importants","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3331836a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts, importants}) => {\r\n    return(\r\n        <Header>\r\n            <h1>Askarjkee</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}, в избранном {importants}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className={`btn ${clazz}`}\r\n                    onClick={() => onFilterSelect(name)}>{label}</button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React from 'react';\r\nimport './post-list-item.css';\r\n\r\nconst PostListItem = (props) => {\r\n\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = props;\r\n        \r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if (important) {\r\n        classNames +=' important';\r\n        }\r\n\r\n        if (like) {\r\n        classNames +=' like';\r\n        }\r\n\r\n        return (\r\n        <div className={classNames}>\r\n            <span \r\n            className=\"app-list-item-label\"\r\n            onClick={onToggleLiked}>\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn-star btn-sm\"\r\n                onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </button>\r\n                <button \r\n                type=\"button\" \r\n                className=\"btn-trash btn-sm\"\r\n                onClick={onDelete}>\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n                <i className=\"fa fa-heart\"></i>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PostListItem;","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem{...itemProps} \r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;\r\n","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас ?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break...', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id); // элемент на который кликнули\r\n    \r\n            const before = data.slice(0, index); // \r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        \r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, newItem, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like}\r\n\r\n            const before = data.slice(0, index); \r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, newItem, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n        const importants = data.filter(item => item.important).length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts}\r\n                importants={importants}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }\r\n}\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root')\r\n);\r\n\r\n\r\n// 5 минута"],"sourceRoot":""}